diff --git a/imagecodecs/libjpeg.pxd b/imagecodecs/libjpeg.pxd
index 501d468..45af300 100644
--- a/imagecodecs/libjpeg.pxd
+++ b/imagecodecs/libjpeg.pxd
@@ -47,9 +47,9 @@ cdef extern from 'jpeglib.h' nogil:
     struct jpeg_error_mgr:
         int msg_code
         const char** jpeg_message_table
-        noreturn_t error_exit(jpeg_common_struct*)
-        void output_message(jpeg_common_struct*)
-        void format_message(jpeg_common_struct* cinfo, char* buffer)
+        noreturn_t error_exit(jpeg_common_struct*) nogil
+        void output_message(jpeg_common_struct*) nogil
+        void format_message(jpeg_common_struct* cinfo, char* buffer) nogil
 
     struct jpeg_common_struct:
         jpeg_error_mgr* err
diff --git a/setup.py b/setup.py
index f0e4f7a..25382a3 100644
--- a/setup.py
+++ b/setup.py
@@ -518,6 +518,7 @@ def customize_build_condaforge(EXTENSIONS, OPTIONS):
     # del EXTENSIONS['htj2k']
     del EXTENSIONS['jetraw']
     del EXTENSIONS['jpegxs']
+    del EXTENSIONS['jpegxl']
     # del EXTENSIONS['jpegli']
     del EXTENSIONS['lzfse']
     del EXTENSIONS['lzham']
@@ -529,7 +530,7 @@ def customize_build_condaforge(EXTENSIONS, OPTIONS):
     del EXTENSIONS['ultrahdr']
     del EXTENSIONS['zlibng']
 
-    EXTENSIONS['jpeg8']['sources'] = []  # use libjpeg-turbo 3
+    #EXTENSIONS['jpeg8']['sources'] = []  # use libjpeg-turbo 3
 
     if sys.platform == 'win32':
         del EXTENSIONS['brunsli']  # brunsli not stable on conda-forge
@@ -562,6 +563,13 @@ def customize_build_condaforge(EXTENSIONS, OPTIONS):
             os.path.join(os.environ['PREFIX'], 'include', 'jxrlib')
         ]
         EXTENSIONS['jpegxr']['libraries'] = ['jpegxr', 'jxrglue']
+        EXTENSIONS['jpeg2k']['include_dirs'].extend(
+            (
+                os.path.join(os.environ['PREFIX'], 'include', 'openjpeg-2.3'),
+                os.path.join(os.environ['PREFIX'], 'include', 'openjpeg-2.4'),
+                os.path.join(os.environ['PREFIX'], 'include', 'openjpeg-2.5'),
+            )
+        )
 
 
 def customize_build_macports(EXTENSIONS, OPTIONS):
