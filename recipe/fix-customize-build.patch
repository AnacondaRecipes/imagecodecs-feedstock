diff --git a/imagecodecs/libjpeg.pxd b/imagecodecs/libjpeg.pxd
index 501d468..45af300 100644
--- a/imagecodecs/libjpeg.pxd
+++ b/imagecodecs/libjpeg.pxd
@@ -47,9 +47,9 @@ cdef extern from 'jpeglib.h' nogil:
     struct jpeg_error_mgr:
         int msg_code
         const char** jpeg_message_table
-        noreturn_t error_exit(jpeg_common_struct*)
-        void output_message(jpeg_common_struct*)
-        void format_message(jpeg_common_struct* cinfo, char* buffer)
+        noreturn_t error_exit(jpeg_common_struct*) nogil
+        void output_message(jpeg_common_struct*) nogil
+        void format_message(jpeg_common_struct* cinfo, char* buffer) nogil
 
     struct jpeg_common_struct:
         jpeg_error_mgr* err
diff --git a/setup.py b/setup.py
index f0e4f7a..b8b6822 100644
--- a/setup.py
+++ b/setup.py
@@ -263,14 +263,28 @@ def customize_build_default(EXTENSIONS, OPTIONS):
     Works on Ubuntu 24.04
 
     """
-    EXTENSIONS['jpeg2k']['include_dirs'].extend(
-        (
-            '/usr/include/openjpeg-2.3',
-            '/usr/include/openjpeg-2.4',
-            '/usr/include/openjpeg-2.5',
+    if sys.platform == 'win32':
+        EXTENSIONS['jpeg2k']['include_dirs'] += [
+            os.path.join(
+                os.environ['LIBRARY_INC'], 'openjpeg-' + os.environ['openjpeg']
+            )
+        ]
+        EXTENSIONS['jpegxr']['include_dirs'] = [
+            os.path.join(os.environ['LIBRARY_INC'], 'jxrlib')
+        ]
+        EXTENSIONS['jpegxr']['libraries'] = ['libjpegxr', 'libjxrglue']
+    else:
+        EXTENSIONS['jpeg2k']['include_dirs'].extend(
+            (
+                '/usr/include/openjpeg-2.3',
+                '/usr/include/openjpeg-2.4',
+                '/usr/include/openjpeg-2.5',
+            )
         )
-    )
-    EXTENSIONS['jpegxr']['include_dirs'].append('/usr/include/jxrlib')
+        EXTENSIONS['jpegxr']['include_dirs'] = [
+            os.path.join(os.environ['PREFIX'], 'include', 'jxrlib')
+        ]
+        EXTENSIONS['jpegxr']['libraries'] = ['jpegxr', 'jxrglue']
     # EXTENSIONS['jpeg8']['sources'] = []  # requires libjpeg-turbo v3
 
     # these extensions are required by core dependent libraries
@@ -653,7 +667,7 @@ if 'sdist' not in sys.argv:
         elif os.environ.get('IMAGECODECS_CIBW', ''):
             customize_build = customize_build_cibuildwheel
         elif os.environ.get('CONDA_BUILD', ''):
-            customize_build = customize_build_condaforge
+            customize_build = customize_build_default
         elif shutil.which('port'):
             customize_build = customize_build_macports
         elif os.name == 'nt' and 'GCC' in sys.version:
