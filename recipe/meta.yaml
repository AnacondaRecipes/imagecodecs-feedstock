{% set name = "imagecodecs" %}
{% set version = "2024.9.22" %}

package:
  name: {{ name|lower }}
  version: {{ version }}

source:
  url: https://pypi.io/packages/source/{{ name[0] }}/{{ name }}/{{ name }}-{{ version }}.tar.gz
  sha256: fea0801b4008d25e971918d991397a351bbe76276cfa98eed2de54cb87e894a3
  patches:
    - fix-customize-build.patch
    # setup.py links jpeg8 against 'jpeg' which is the name for the static build (jpeg.lib)
    # instead it should link against 'libjpeg' which is shared (libjpeg.dll)
    # Note: setup.py has CRLF line endings for this version: this patch file
    #       should have CRLF line endings as well
    - 0003-jpeg8_use_shared_libjpeg.patch  # [win]

build:
  number: 0
  skip: true   # [py<39]
  entry_points:
    - imagecodecs=imagecodecs.__main__:main
  ignore_run_exports:
    - libbrotlicommon
    - brotli
    # jxrlib for win is only built as static
    - jxrlib            # [win]

requirements:
  build:
    - {{ compiler('c') }}
    - {{ compiler('cxx') }}
    - pkg-config
    - patch       # [not win]
    - m2-patch    # [win]
  host:
    - setuptools
    - python
    - pip
    - wheel
    - numpy 2.0 # [py<313]
    - numpy 2.1 # [py==313]
    - cython >=3.0.11
    - zlib {{ zlib }}
    - zlib-ng 2.0
    - bzip2 {{ bzip2 }}
    - xz {{ xz }}
    - zstd 1.5.5
    - lz4-c 1.9.4
    - libpng {{ libpng }}
    - libwebp {{ libwebp }}
    - libwebp-base {{ libwebp }}
    - jxrlib 1.1
    - jpeg {{ jpeg }}
    - giflib {{ giflib }}
    - openjpeg {{ openjpeg }}
    - blosc 1.21.3
    - lcms2 2.16
    - libaec 1
    - brotli 1.0.9
    - libzopfli 1.0.3
    - charls 2.2.0            # [not s390x]
    - snappy 1.1.9
    - libtiff 4.5.1
    - lerc 4
    - zfp 1.0.0               # [not (s390x or aarch64)]
    - libdeflate 1.22
    - brunsli 0.1             # [not win and not s390x]
    # While jpeg-turbo is the preferred version upstream, the migration
    # to libjpeg-turbo has been contentious on conda-forge
    # - libjpeg-turbo
    - cfitsio 3.470
    - libavif 1.1.1

  run:
    - libdeflate
    - python
    # Work around missing `run_exports` in defaults package
    - "{{ pin_compatible('brotli', max_pin='x.x') }}"
    - numpy

{% set tests_to_skip = "" %}
# imagecodecs._deflate.DeflateError: libdeflate_zlib_compress returned unknown error '0',
# it will require updating libdeflate to >=1.21 and rebuilding then libtiff too.
{% set tests_to_skip = tests_to_skip + "test_jpeg_rgb_mode or test_compressors" %}
# Disable test_jpeg2k_numthreads on all platform except win: it causes segmentation fault.
{% set tests_to_skip = tests_to_skip + " or test_jpeg2k_numthreads" %}  # [unix]
# Disable test_cms_identity_transforms on unix and win because a part of the tests fail with "AssertionError: Not equal to tolerance rtol=1e-07, atol=0.001"
# Sometimes it can fail "Windows fatal exception: access violation" on Windows.
# Disable test_cms on all platforms because lcms2-2.16 crashes transforming sRGB float to planar uint16, see https://github.com/mm2/Little-CMS/issues/420.
# Check if it's fixed in lcms2-2.16.1.
{% set tests_to_skip = tests_to_skip + " or test_cms_identity_transforms or test_cms" %}

{% set tests_to_skip = tests_to_skip + " or test_image_roundtrips" %}  # [unix]
# disable test_zfp as they are all failing on osx-64
{% set tests_to_skip = tests_to_skip + " or test_zfp" %}  # [osx and x86_64]
# CAPTURING FAILING S390x tests to be reviewed later (These tests are failing most likely from an upstream Endianess issue)
# These may be fixed with future versions but needs to be checked.
{% set tests_to_skip = tests_to_skip + " or test_packints_decode or test_floatpred or test_float24 or test_jpegsof3 or test_image_roundtrip or test_spng_encode or test_ljpeg or test_jpeg_rgb_mode or test_cms_format" %}  # [linux and s390x]
# lerc tests failed on s390x
{% set tests_to_skip = tests_to_skip + " or test_lerc or test_lerc_files or test_lerc_compression or test_lerc_masks or test_dicomrle or test_eer or test_eer_superres or test_zstd_stream" %}  # [linux and s390x]
# test_szip_canonical fails with 'assert np.False_' on s390x
{% set tests_to_skip = tests_to_skip + " or test_szip_canonical" %}  # [linux and s390x]

{% set tests_to_skip = tests_to_skip + " or test_cms_profile" %}  # [win]

test:
  source_files:
    - tests
  requires:
    - pip
    - pytest
  imports:
    - imagecodecs
    - imagecodecs._imagecodecs
  commands:
    - pip check
    - cd tests
    # TODO: determine why OpenMP on Windows build workers is unreliable
    - set SKIP_OMP=true                # [win]
    - pytest -vv test_imagecodecs.py -k "not ({{ tests_to_skip }})"

about:
  home: https://www.cgohlke.com
  license: BSD-3-Clause
  license_family: BSD
  license_file:
    - LICENSE
    - 3rdparty/liblzf/LICENSE
    - 3rdparty/bitshuffle/LICENSE
    - 3rdparty/openjpeg/LICENSE
  summary: Image transformation, compression, and decompression codecs
  description: |
    The imagecodecs package provides various block-oriented, in-memory buffer
    transformation, compression, and decompression functions for use in the
    tifffile, czifile, and other Python imaging modules.

    Decode and/or encode functions are currently implemented for Zlib DEFLATE,
    ZStandard, Blosc, LZMA, BZ2, LZ4, LZW, LZF, PNG, WebP, JPEG 8-bit,
    JPEG 12-bit, JPEG SOF=0xC3, JPEG 2000, JPEG XR, PackBits, Packed Integers,
    Delta, XOR Delta, Floating Point Predictor, and Bitorder reversal.

  doc_url: https://www.cgohlke.com
  dev_url: https://github.com/cgohlke/imagecodecs

extra:
  recipe-maintainers:
    - csachs
    - hmaarrfk
    - sdvillal
